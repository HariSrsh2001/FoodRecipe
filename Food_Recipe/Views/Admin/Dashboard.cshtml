@using Newtonsoft.Json.Linq
@model dynamic  
<!-- either List<UserRecipe> OR List<PendingUserRecipe> -->

@{
    Layout = null;
    string status = (string)Context.Request.Query["status"];
    status = string.IsNullOrWhiteSpace(status) ? "approved" : status.ToLower();
}

<!doctype html>
<html>
<head>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Food_Recipe.styles.css" asp-append-version="true" />
   
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .topbar{position:sticky;top:0;z-index:999;border-bottom:1px solid #ddd;box-shadow:0 2px 4px rgba(0,0,0,.05)}
        .recipe-grid{display:grid;gap:24px;grid-template-columns:repeat(auto-fit,minmax(290px,1fr));margin:40px 0}
        .recipe-card{background:#fff;border:1px solid #ddd;border-radius:10px;padding:18px;box-shadow:0 2px 7px rgba(0,0,0,.05)}
        .recipe-card img{width:100%;height:180px;object-fit:cover;border-radius:8px;margin-bottom:10px}
        .rating{color:#ffc107;font-weight:600}
        .details-section h4{font-size:1rem;margin-top:12px;color:#ff7047}
        .bottom-buttons .btn{width:100%;margin-bottom:6px}
    </style>
</head>

<body class="bg-light">
<header class="topbar d-flex justify-content-between align-items-center p-3">
        <img src="~/images/Delicious_Recipes.png" alt="Logo" />
        <h1>Delicious Recipes</h1>
    <h3>Admin Dashboard</h3>
        @* <img src="~/images/Delicious_Recipes.png" alt="Logo" />
        <h1>Delicious Recipes</h1> *@
    <div>
        <a asp-controller="Admin" asp-action="Dashboard" asp-route-status="approved"
           class="btn btn-outline-primary btn-sm me-2">Approved ✅</a>
        <a asp-controller="Admin" asp-action="Dashboard" asp-route-status="pending"
           class="btn btn-outline-warning btn-sm me-3">Pending ⏳</a>
            <a asp-controller="Admin" asp-action="Users"
               class="btn btn-outline-info btn-sm me-2">Users 👥</a>
        <a asp-controller="Admin" asp-action="Logout"
           class="btn btn-outline-danger btn-sm">Logout 🔒</a>
    </div>
</header>

<main class="container">
    <h4 class="text-center mt-4">
        @(status == "pending" ? "Pending Recipes ⏳" : "Approved Recipes ✅")
    </h4>

    @* ---------- APPROVED TAB (UserRecipe) ---------- *@
    @if (status == "approved")
    {
        var list = Model as List<Food_Recipe.Domain.Models.UserRecipe>;
        if (list == null || list.Count == 0)
        {
            <p class="text-center mt-4">No approved recipes found.</p>
        }
        else
        {
            <div class="recipe-grid">
                @foreach (var r in list)
                {
                    <div class="recipe-card">
                        <img src="@r.Img" alt="@r.Name"/>
                        <h5>@r.Name <small class="text-muted">(@r.Category) — @r.Username</small></h5>
                        <p class="rating">⭐ @r.Rating / 5</p>
                        <p>@r.Description</p>

                        <div class="details-section">
                            <h4>Ingredients</h4>
                            <ul>
                                @foreach (var ing in (r.Ingredients ?? "")
                                                      .Split(',', StringSplitOptions.RemoveEmptyEntries))
                                { <li>@ing.Trim(' ','"','[',']','\'')</li> }
                            </ul>

                            <h4>Instructions</h4>
                            <ol>
                                @foreach (var step in (r.Instructions ?? "")
                                                      .Split(',', StringSplitOptions.RemoveEmptyEntries))
                                { <li>@step.Trim(' ','"','[',']','\'')</li> }
                            </ol>
                        </div>

                        @* Pretty nutrition if JSON *@
                        @* @{
                            JObject n=null;
                            if(!string.IsNullOrWhiteSpace(r.Nutrition))
                            { try{ n=JObject.Parse(r.Nutrition);}catch{} }
                        } *@
                        @* @if(n!=null)
                        {
                            <div class="mt-2">
                                <strong>Nutrition:</strong>
                                <ul class="mb-0">
                                    <li>Calories: @n["calories"]</li>
                                    <li>Protein : @n["protein"]</li>
                                    <li>Carbs   : @n["carbs"]</li>
                                    <li>Fat     : @n["fat"]</li>
                                </ul>
                            </div>
                        } *@
                    </div>
                }
            </div>
        }
    }

    @* ---------- PENDING TAB (PendingUserRecipe) ---------- *@
    else
    {
        var pend = Model as List<Food_Recipe.Domain.Models.PendingUserRecipe>;
        if (pend == null || pend.Count == 0)
        {
            <p class="text-center mt-4">No pending recipes found.</p>
        }
        else
        {
            <div class="recipe-grid">
                @foreach (var r in pend)
                {
                    <div class="recipe-card">
                        <img src="@r.Img" alt="@r.Name"/>
                        <h5>@r.Name <small class="text-muted">(@r.Category) — @r.Username</small></h5>
                        <p>@r.Description</p>

                        <div class="details-section">
                            <h4>Ingredients</h4>
                            <ul>
                                @foreach (var ing in (r.Ingredients ?? "")
                                                      .Split(',', StringSplitOptions.RemoveEmptyEntries))
                                { <li>@ing.Trim()</li> }
                            </ul>

                            <h4>Instructions</h4>
                            <ol>
                                @foreach (var step in (r.Instructions ?? "")
                                                      .Split(',', StringSplitOptions.RemoveEmptyEntries))
                                { <li>@step.Trim()</li> }
                            </ol>
                        </div>

                        <div class="bottom-buttons mt-3">
                            <a asp-action="EditRecipe" asp-route-id="@r.Id"
                               class="btn btn-outline-primary btn-sm w-100 mb-2">✏️ Edit</a>

                            @* <form asp-action="Approve" method="post">
                                <input type="hidden" name="id" value="@r.Id"/>
                                <button class="btn btn-success btn-sm w-100 ">Approve ✅</button>
                            </form>

                            <form asp-action="Reject" method="post" class="mt-1">
                                <input type="hidden" name="id" value="@r.Id"/>
                                <button class="btn btn-danger btn-sm w-100">Reject ❌</button>
                            </form> *@
                                <div class="row g-2">
                                    <div class="col-12">
                                        <form asp-action="Approve" method="post">
                                            <input type="hidden" name="id" value="@r.Id" />
                                            <button class="btn btn-success btn-sm w-100">✅ Approve</button>
                                        </form>
                                    </div>

                                    <div class="col-12">
                                        <form asp-action="Reject" method="post">
                                            <input type="hidden" name="id" value="@r.Id" />
                                            <button class="btn btn-danger btn-sm w-100">❌ Reject</button>
                                        </form>
                                    </div>
                                </div>

                        </div>
                    </div>
                }
            </div>
        }
    }
</main>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
